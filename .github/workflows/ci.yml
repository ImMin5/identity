name: SpaceONE CI

on:
  push:
    branches:
      - master
jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set environment virables
        env:
          # 이 곳에서 환경변수를 통해 설정 관리
          SERVICE: identity
          PYPI_UPLOAD: true # upload pypi if this is true
          DOCKER_UPLOAD: true
          # LOCATION points the parent directory
          LOCATION_SETUP_PY: src # optional. for pypi upload
          LOCATION_VERSION: src # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
          LOCATION_DOCKERFILE: .
          IMAGE_PREFIX: spaceone 
          IS_SUDO: false
        run: |
          echo "::set-env name=SERVICE::$SERVICE"
          echo "::set-env name=PYPI_UPLOAD::$PYPI_UPLOAD"
          echo "::set-env name=DOCKER_UPLOAD::$DOCKER_UPLOAD"
          echo "::set-env name=LOCATION_SETUP_PY::$LOCATION_SETUP_PY"
          echo "::set-env name=LOCATION_VERSION::$LOCATION_VERSION"
          echo "::set-env name=LOCATION_DOCKERFILE::$LOCATION_DOCKERFILE"
          echo "::set-env name=IMAGE_PREFIX::$IMAGE_PREFIX"
          echo "::set-env name=IS_SUDO::$IS_SUDO"
      - name: Clone master branch
          uses: actions/checkout@v2
          with:
            ref: master
            path: master_branch
            - name: Compare version
              run: |
                echo "MASTER BRANCH VERSION"
                cat master_branch/$LOCATION_VERSION/VERSION
                echo -e "\n\n"

                echo "PR VERSION"
                cat $LOCATION_VERSION/VERSION
                echo -e "\n\n"

                echo "::set-env name=IS_NEW_VERSION::false"
                cmp --silent master_branch/$LOCATION_VERSION/VERSION $LOCATION_VERSION/VERSION || \
                echo "::set-env name=IS_NEW_VERSION::true"

                version=$(cat $LOCATION_VERSION/VERSION)-${{ github.run_id }}
                echo "::set-env name=VERSION::$version"
  pypi:
    needs: initialize
    runs-on: ubuntu-latest
    if: env.PYPI_UPLOAD == 'true'
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          - name: Install dependencies
            run: |
              if [ $IS_SUDO = true ]
                then
                  sudo python -m pip install --upgrade pip
                  sudo pip install setuptools wheel twine
                else
                  python -m pip install --upgrade pip
                  pip install setuptools wheel twine
              fi
      - name: Build
        run: |
          if test -f "Makefile"; then
            make all
          fi
          cd $LOCATION_SETUP_PY
          if [ $IS_SUDO = true ]
            then
              sudo python setup.py sdist bdist_wheel
            else
              python setup.py sdist bdist_wheel
          fi
      - name: Upload Pypi
        id: upload
        run: |
          cd $LOCATION_SETUP_PY
          if [ $IS_SUDO = true ]
            then
              sudo twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose
            else
              twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose
          fi

  docker:
    needs: initialize
    runs-on: ubuntu-latest
    if: env.DOCKER_UPLOAD == 'true'
    steps:
    - uses: actions/checkout@v2

    - name: Upload docker
      uses: docker/build-push-action@v1
      with:
        repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: ${{ env.LOCATION_DOCKERFILE }}
        tags: latest,${{ env.VERSION }}
